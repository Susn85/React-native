import { Image, StyleSheet,TouchableOpacity,Alert, Text, TextInput, View } from 'react-native'
import React from 'react'
import { Formik } from 'formik'
import { LoginInitialValue, LoginValidationSchema } from './utils'
 function Login() {
  const handleLogin = () => {
    console.log("Values");s
  }
  return (
    <View style={styles.container}>
      <View style={styles.card}>
        <Image
        style={styles.imagebody}
        source={require("../../src/assets/Instagram 1 Logo Png Transparent - Instagram Name Logo Png, Png Download(2400x806) - PngFind.jpg")}
       />
       <Formik initialValues={LoginInitialValue} validationSchema={LoginValidationSchema} onSubmit={handleLogin}>
        {({
        
        })=>{
          return(
            <View>
                 <TouchableOpacity>
                 <Text style={styles.forgot}>forgot password ?</Text>  
                 </TouchableOpacity>     
            </View>
          )
        }}
       </Formik>
      </View>
      <View style={styles.signupbox}>
        <Text>don't have an account?
          <TouchableOpacity>
             <Text style={styles.signup}> signup</Text>
          </TouchableOpacity>
           </Text>
      </View>
    </View>
  )
}

const styles = StyleSheet.create({
  card:{
  flex:0.8,
  justifyContent:'center',
  },
  container:{
    flex:1,
    alignItems:'center',
  },
  imagebody:{
    height:100,
    width:350,
  },
  signupbox:{
    flex:0.2,
    marginBottom:10,
  },
  Text:{
    color:'white',
    fontWeight:'bold',
    fontSize:16,
    margin:5
    },
    forgot:{
      color:'#3797FE'
    },
    input:{
      borderColor:'grey',
      width:350,
      height:50,
      alignSelf:'center',
      margin:10,
      padding: 10,
      borderWidth: 1,
      borderRadius: 8,
    }, 
    button:{
      color:'white',
      borderRadius: 8,
      alignSelf:'center',
      alignItems: 'center',
      backgroundColor: '#3797FE',
      padding:10,
      margin:10,
      width:350,
      height:50,
    },
    signup:{
     color:'#3797FE'
    }
})
export default Login
 {{{
            handleChange,
            handleBlur,
            values,
            touched,
            errors,
            isValid,
          }} => {
            return(
             <View>
               <InputBox
               placeholder={'Username'}
               onchangeText={handleChange('Username')}
               onBlur={handleBlur('Username')}
               value={values.Usernme}
               touched={touched.Username}
               errors={errors.Username}
               />
               <InputBox
               placeholder={'password'}
               onchangeText={handleChange('password')}
               onBlur={handleBlur('password')}
               value={values.password}
               touched={touched.password}
               errors={errors.password}
               />
                {/* <TouchableOpacity
                            style={styles.hidePasswordIcon}
                            // onPress={_onPressToggleHidePassword}
                        >
                            {  (
                                <Icon name="eye-off-outline" size={20}
                                    color="#333" />
                            )  (
                                    <Icon name="eye-outline" color="#318bfb"
                                        size={20} />
                                )
                            }
                        </TouchableOpacity> */}
                {errors && touched && <Text>{errors}</Text>}
               <TouchableOpacity>
                 <Text style={styles.forgot}>forgot password ?</Text>  
                 </TouchableOpacity>   
             </View>
            );
          }}






import { Image, StyleSheet,TouchableOpacity, Text, TextInput, View } from 'react-native'
import React from 'react'
import { Formik } from 'formik'
import { LoginInitialValue, LoginValidationSchema } from './utils'

const Login = (onPress) => {
  const handleLogin = () => {
    console.log(values);
  }
  return (
    <View style={styles.container}>
      <View>
       <Text style={styles.welcomeText}>welcome</Text>
       <Text style={styles.Text}>sign in your account</Text>
       <Formik 
        initialValues={LoginInitialValue}
        validationSchema={LoginValidationSchema}
        onSubmit={handleLogin}>
          {({
            handleChange,
            handleBlur,
            values,
            touched,
            errors,
            isValid,
          }) => {
            return(
             <View style={styles.maincontainer}>
               <TextInput
               style={styles.input}
               onPress={onPress}
               placeholder={'Username'}
               onchangeText={handleChange('Username')}
               onBlur={handleBlur('Username')}
               value={values.Usernme}
               touched={touched.Username}
               errors={errors.Username}
               />
               {errors.Username && touched.Username && <Text style={styles.ertext}>{errors.Username}</Text>}
               <TextInput
               style={styles.input}
               onPress={onPress}
               placeholder={'password'}
               onchangeText={handleChange('password')}
               onBlur={handleBlur('password')}
               value={values.password}
               touched={touched.password}
               errors={errors.password}
               />
              {errors.password && touched.password && <Text style={styles.ertext}>{errors.password}</Text>}    
               <TouchableOpacity>
                  <View>
                    <Text style={styles.signInText}>Login</Text>     
                 </View>
               </TouchableOpacity> 
             <TouchableOpacity>
                <View>
                   <Text style={styles.forgot}>forgot password ?</Text>
                </View>                  
             </TouchableOpacity> 
              <View style={styles.signupbox}>
                 <Text>don't have an account?
                   <TouchableOpacity>
                     <Text style={styles.signup}> signup</Text>
                   </TouchableOpacity>         
                 </Text>        
               </View>          
             </View>             
            );
          }}
        </Formik> 
      </View>
    </View>
  )
}
const styles = StyleSheet.create({
  card:{
  flex:0.8,
  justifyContent:'center',
  },
  container:{
    flex:1,
    alignItems:'center',
  },
  maincontainer:{
   height:68,
  },
  ertext:{
    color:'red',
   
  },
   hidePasswordIcon: {
    position: 'absolute',
    height: 30,
    width: 30,
    justifyContent: 'center',
    alignItems: 'center',
    right: 5,
    top: (44 - 30) / 2,
   },
  signupbox:{
    flex:0.8,
   alignItems:'center',
  },
  Text:{
    color:'black',
    textAlign:'center',
    fontSize:16,
    margin:5
    },
    forgot:{
      color:'#3797FE',
      padding:8,
      
    },
    input:{
      flex:1,
      justifyContent:'center',
      borderColor:'grey',
      width:350,
      height:50,
      alignSelf:'center',
      margin:10,
      padding: 10,
      borderWidth: 1,
      borderRadius: 8,
    }, 
    welcomeText:{
      fontSize:70,
      textAlign:'center',
      fontWeight:'500',
      color:"#262626"
  },
  signInText:{
    color:'white',
    textAlign:"center",
    fontSize:18,
    backgroundColor:"#3797FE",
    width:350,
    height:50,
    margin:10,
    padding:10,
    borderRadius: 8,
   },
    signup:{
     color:'#3797FE',
     alignItems:'centr',
     justifyContent:'cene',
    }
})
export default Login




/**
 * Sample React Native App
 * https://github.com/facebook/react-native
 *
 * @format
 */

import React from 'react';
import type {PropsWithChildren} from 'react';
import {
  SafeAreaView,
  ScrollView,
  StatusBar,
  StyleSheet,
  Text,
  useColorScheme,
  View,
} from 'react-native';

import {
  Colors,
  DebugInstructions,
  Header,
  LearnMoreLinks,
  ReloadInstructions,
} from 'react-native/Libraries/NewAppScreen';

type SectionProps = PropsWithChildren<{
  title: string;
}>;

function Section({children, title}: SectionProps): React.JSX.Element {
  const isDarkMode = useColorScheme() === 'dark';
  return (
    <View style={styles.sectionContainer}>
      <Text
        style={[
          styles.sectionTitle,
          {
            color: isDarkMode ? Colors.white : Colors.black,
          },
        ]}>
        {title}
      </Text>
      <Text
        style={[
          styles.sectionDescription,
          {
            color: isDarkMode ? Colors.light : Colors.dark,
          },
        ]}>
        {children}
      </Text>
    </View>
  );
}

function App(): React.JSX.Element {
  const isDarkMode = useColorScheme() === 'dark';

  const backgroundStyle = {
    backgroundColor: isDarkMode ? Colors.darker : Colors.lighter,
  };

  return (
    <SafeAreaView style={backgroundStyle}>
      <StatusBar
        barStyle={isDarkMode ? 'light-content' : 'dark-content'}
        backgroundColor={backgroundStyle.backgroundColor}
      />
      <ScrollView
        contentInsetAdjustmentBehavior="automatic"
        style={backgroundStyle}>
        <Header />
        <View
          style={{
            backgroundColor: isDarkMode ? Colors.black : Colors.white,
          }}>
          <Section title="sujeet">
            Edit <Text style={styles.highlight}>App.tsx</Text> to change this
            screen and then come back to see your edits.
          </Section>
          <Section title="name : sujeet nayak">
            <ReloadInstructions />
          </Section>
          <Section title="Debug">
            <DebugInstructions />
          </Section>
          <Section title="Learn More">
            Read the docs to discover what to do next:
          </Section>
          <LearnMoreLinks />
        </View>
      </ScrollView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  sectionContainer: {
    marginTop: 32,
    paddingHorizontal: 24,
  },
  sectionTitle: {
    fontSize: 24,
    fontWeight: '600',
  },
  sectionDescription: {
    marginTop: 8,
    fontSize: 18,
    fontWeight: '400',
  },
  highlight: {
    fontWeight: '700',
  },
});

export default App;


import { Image, StyleSheet,TouchableOpacity, Text,onPress, TextInput, View } from 'react-native'
import React from 'react'
import { Formik } from 'formik'
import { LoginInitialValue, LoginValidationSchema } from './utils'
import { useNavigation } from '@react-navigation/native'
import {InputBox} from './screen/Auth/InputBox'
import {CustomButton} from './screen/Auth/CustomButton' 

const Login = () => { 
 const navigation = useNavigation();
  const handleLogin = () => {
    console.log(Values);
  }
  return (
    <View style={{alignItems:'center'}}>
      <Image
      style={styles.image}
      source={require('../../src/assets/Susan.png')}/>
        <Formik 
        initialValues={LoginInitialValue}
        validationSchema={LoginValidationSchema}
        onSubmit={handleLogin}>
          {({
            handleSubmit,
            handleChange,
            handleBlur,
            values,
            touched,
            errors,
            isValid
          }) => {
            return(
              <View>
                <TextInput
                  style={styles.textinput}
                  placeholder={'Username'}
                  onchangeText={handleChange('Username')}
                  onBlur={handleBlur('Username')}
                  value={values.Usernme}
                  touched={touched.Username}
                  errors={errors.Username}
               />
              {errors.Username && touched.Username && <Text style={{color:'red',paddingLeft:15}}>{errors.Username}</Text>}
                 <TextInput
                  style={styles.textinput}
                  placeholder={'password'}
                   onchangeText={handleChange('password')}
                   onBlur={handleBlur('password')}
                   values={values.password}
                   touched={touched.password}
                   errors={errors.password}
                   secureTextEntry={true}  
               />
             {errors.password  && touched.password && <Text style={{color:'red',paddingLeft:15}}>{errors.password}</Text>} 
               <TouchableOpacity onPress={handleSubmit} >
                    <Text style={styles.signInText}>Login</Text>     
               </TouchableOpacity> 
               <TouchableOpacity>
                  <Text style={{color:'#3797FE'}}>forgot password?</Text>
               </TouchableOpacity> 
              </View>
            )
          }}
        </Formik>
           <View>
             <Text>don't have an account ?
              <TouchableOpacity onPress={()=>{navigation.navigate('Signup')}}>
                <Text style={{color:'#3797FE'}}>sign up</Text>
              </TouchableOpacity>
             </Text>
        </View>
     </View>
  )
}
const styles = StyleSheet.create({
  image:{
    margin:4,
    width:400,
    height: 200,
},
  textinput:{
      justifyContent:'center',
      borderColor:'grey',
      width:350,
      height:50,
      alignSelf:'center',
      margin:5,
      padding:10,
      borderWidth: 1,
      borderRadius: 5,
  },
  signInText:{
    color:'white',
    textAlign:"center",
    alignSelf:'center',
    fontSize:18,
    backgroundColor:"#3797FE",
    width:350,
    height:50,
    margin:10,
    padding:10,
    borderRadius: 8,
  },
})
export default Login;


import { Image, StyleSheet,TouchableOpacity, Text, TextInput, View } from 'react-native'
import React from 'react'
import { Formik } from 'formik'
import { SignupInitialValue, SignupValidationSchema } from './utils'
import {InputBox} from './InputBox'
import {CustomButton} from './CustomButton'
import { useNavigation } from '@react-navigation/native'

const Signup = () => {
 const navigation = useNavigation();
  const handleSignup = (values) => {
    console.log(values);
  }
  return (
    <View style={{alignItems:'center'}}>
      <Text style={styles.headingTitle}>Sign up to your mobile number</Text>
        <Formik 
        initialValues={SignupInitialValue}
        validationSchema={SignupValidationSchema}
        onSubmit={handleSignup}>
          {({
            handleChange,
            handleBlur,
            values,
            touched,
            errors,
            isValid,
          }) => {
            return(
              <View>
                <Text style={styles.Title}>Enter email</Text>
                <TextInput
                  style={styles.textinput}
                  placeholder={'Username'}
                  onchangeText={handleChange('Username')}
                  onBlur={handleBlur('Username')}
                  value={values.Username}
                  touched={touched.Username}
                  errors={errors.Username}
               />
              {errors.Username && touched.Username && <Text style={{color:'red',paddingLeft:15}}>{errors.Username}</Text>}
              <Text style={styles.Title}>Create password</Text>
              <TextInput
                  style={styles.textinput}
                  placeholder={'password'}
                  onchangeText={handleChange('password')}
                  onBlur={handleBlur('password')}
                  values={values.password}
                  touched={touched.password}
                  errors={errors.password}
                  secureTextEntry={true}
               />
              {errors.password && touched.password && <Text style={{color:'red',paddingLeft:15}}>{errors.password}</Text>}
              <Text style={styles.Title}>confirm password</Text>
                 <TextInput
                  style={styles.textinput}
                  placeholder={'password'}
                   onchangeText={handleChange('password')}
                   onBlur={handleBlur('password')}
                   values={values.password}
                   touched={touched.password}
                   errors={errors.password}
                   secureTextEntry={true}
               />
             {errors.password && touched.password && <Text style={{color:'red',paddingLeft:15}}>{errors.password}</Text>}
             <Text style={styles.Title}>Mobile Number</Text>
             <TextInput
                  style={styles.textinput}
                  placeholder={'number'}
                  onchangeText={handleChange('number')}
                  onBlur={handleBlur('number')}
                  values={values.number}
                  touched={touched.number}
                  errors={errors.number}
                  keyboardType={'decimal-pad'}
                  maxLength={10}
               />
              {errors.number && touched.number && <Text style={{color:'red',paddingLeft:15}}>{errors.number}</Text>} 
               <TouchableOpacity onPress={handleSignup} >
                    <Text style={styles.signupText}>Sign up</Text>     
               </TouchableOpacity> 
              </View>
            )
          }}
        </Formik>
           <View>
             <Text>Have an account ?
              <TouchableOpacity onPress={()=>{navigation.getBack()}}>
                <Text style={{color:'#3797FE'}}>Sign in</Text>
              </TouchableOpacity>
             </Text>
        </View>
     </View>
  )
}
const styles = StyleSheet.create({
    headingTitle:{
        fontSize:22,
        fontWeight:'700',
        margin:20,
        height:50,
    },
  textinput:{
      justifyContent:'center',
      borderColor:'grey',
      width:350,
      alignSelf:'center',
      margin:5,
      height:50,
      padding:10,
      borderWidth: 1,
      borderRadius: 5,
  },
  signupText:{
    color:'white',
    textAlign:"center",
    alignSelf:'center',
    fontSize:18,
    backgroundColor:"#3797FE",
    width:350,
    height:50,
    margin:10,
    padding:10,
    borderRadius: 8,
  },
  Title:{
    fontSize:15,
    margin:4,
    paddingLeft:5
  }
})
export default Signup;


import { Image, StyleSheet, TouchableOpacity, Text, TextInput, View } from 'react-native';
import React from 'react';
import { Formik } from 'formik';
import { LoginInitialValue, LoginValidationSchema } from './utils';
import { useNavigation } from '@react-navigation/native';

const Login = () => {
  const navigation = useNavigation();

  const handleLogin = (values) => {
    console.log(values);
  };

  return (
    <View style={{ alignItems: 'center' }}>
      <Image
        style={styles.image}
        source={require('../../src/assets/Susan.png')}
      />
      <Formik
        initialValues={LoginInitialValue}
        validationSchema={LoginValidationSchema}
        onSubmit={handleLogin}>
        {({
          handleSubmit,
          handleChange,
          handleBlur,
          values,
          touched,
          errors,
        }) => (
          <View>
            <TextInput
              style={styles.textinput}
              placeholder="Username"
              onChangeText={handleChange('Username')}
              onBlur={handleBlur('Username')}
              value={values.Username}
            />
            {errors.Username && touched.Username && (
              <Text style={{ color: 'red', paddingLeft: 15 }}>
                {errors.Username}
              </Text>
            )}
            <TextInput
              style={styles.textinput}
              placeholder="Password"
              onChangeText={handleChange('password')}
              onBlur={handleBlur('password')}
              value={values.password}
              secureTextEntry={true}
            />
            <TouchableOpacity
                            style={styles.hidePasswordIcon}
                            // onPress={_onPressToggleHidePassword}
                        >
                            {  (
                                <Icon name="eye-off-outline" size={20}
                                    color="#333" />
                            )  (
                                    <Icon name="eye-outline" color="#318bfb"
                                        size={20} />
                                )
                            }
                        </TouchableOpacity>
            {errors.password && touched.password && (
              <Text style={{ color: 'red', paddingLeft: 15 }}>
                {errors.password}
              </Text>
            )}
            <TouchableOpacity onPress={handleSubmit}>
              <Text style={styles.signInText}>Login</Text>
            </TouchableOpacity>
            <TouchableOpacity>
              <Text style={styles.forgotPasswordText}>Forgot password?</Text>
            </TouchableOpacity>
          </View>
        )}
      </Formik>
      <View style={{ flexDirection: 'row', marginTop: 10 }}>
        <Text>Don't have an account? </Text>
        <TouchableOpacity >
          <Text style={{ color: '#3797FE' }}>Sign up</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  image: {
    margin: 4,
    width: 400,
    height: 200,
  },
  textinput: {
    justifyContent: 'center',
    borderColor: 'grey',
    width: 350,
    height: 50,
    alignSelf: 'center',
    margin: 5,
    padding: 10,
    borderWidth: 1,
    borderRadius: 5,
  },
  signInText: {
    color: 'white',
    textAlign: 'center',
    alignSelf: 'center',
    fontSize: 18,
    backgroundColor: '#3797FE',
    width: 350,
    height: 50,
    margin: 10,
    padding: 10,
    borderRadius: 8,
  },
  forgotPasswordText: {
    color: '#3797FE',
    marginTop: 5,
  },
});

export default Login;


 import * as yup from "yup";
    
export const LoginInitialValue ={
    User_id:'',
    password:'',
};
export const LoginValidationSchema =yup.object().shape({
    Username:yup.string().required("Username is required"),
    password:yup.string().required("password is required"),
})

// export const SignupInitialValue ={
//      User_id:'',
//      password:'',
//      password:'',
//      number:'',
// };
// export const SignupValidationSchema =yup.object().shape({
//      Username:yup.string().email('Invalid email').required("Username is required"),
//      password:yup.string().required("password is required"), 
//     number:yup
//    .string()
//    .min(
//     10,
//     ({min})=>
//         `${'Mobile number must be'} ${min} ${'character'}`,
//    )
//    .required('Mobile number is required')
//     .matches(/^[789]\d{9}$/, 'mobile number should be start from 7,8,9'),
// })
